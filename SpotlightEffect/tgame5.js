// Constant Lists
let normal = [-4.281133426849573, -6.429625779999311, 0.9499208654510732, -1.15322510512848, -2.3522699356592573, 7.165274982279701, 9.149920903357843, -2.0652157839556744, 5.027042799114562, 0.8156664133353307, -10.075817319530296, -6.952993356004535, 7.951373149669726, 6.405813207265046, 1.4371717354924312, 0.5311263966754797, -7.2091898517842, 2.6232446987675444, -7.156151234599529, 1.3445487664523794, 1.7465654845735679, -3.268234024932825, -12.635535200615118, -2.2745463580082625, -0.3445718018294028, 2.287070353068722, -1.9795248729738817, -1.1815300191193676, -3.0236421242490192, 3.0796872244716793, -0.3459371625682025, -1.5915399117217899, 5.648456383836537, -1.2529883543514442, -10.35166616899351, -7.2245747873866755, -6.519908089548796, -1.02791292223818, 4.971226765103796, 2.1862361673636896, 3.05542046485066, -1.2339037308576128, -2.2676970864058426, 0.909498538447242, -1.1881620200593044, -8.369183408309196, -5.977406222076374, 3.4466852250530917, 8.292989855935982, -11.17985028699789, -9.75476565637114, 3.789472114745278, -0.6178054470368979, -18.72489883275111, -13.227230513776917, 9.410434309858498, -0.13911411460613912, 9.089401954593427, -0.18366688433987463, 1.4162316141160276, -11.504969595056478, 2.1956804819472544, 0.028007571445311377, 0.8837967942601656, 8.170957119520015, -3.0346721549085687, 4.413133983970359, 5.67175344737787, 2.520360994952146, 5.330989237617465, -3.7351459414658486, 0.830436708810596, 0.8512361494246345, 0.04980925872850683, 4.408934835411532, 2.152732370972277, -4.487210438139815, 5.279635857904764, 0.2890535544399192, 4.905682934796658, -2.652940885248272, 6.200199314714075, -4.887740675433404, -7.5700312452871765, 4.605148624860894, -6.385938589745911, -2.2689066520004646, -1.5368747890075671, 2.8070704783951084, -0.5867345096019648, 4.702974098364204, -1.449831092975022, -2.1558012605836367, 4.501683386333429, -11.42167926134703, 3.4600663875233457, 5.201892665068279, -0.7278281190149815, 2.4855431006706246, 0.48726440062610565, 1.979884899158714, -0.7745141567194973, -4.272582950976776, 6.964138721956845, 5.097667261637879, -3.8972306062204187, 3.550830460134136, 0.13116821736506473, -2.6699427861325504, 4.91369911417676, 4.554076658059619, 0.1452679958692537, 6.5802309489764905, 11.57213569067702, -8.147039365711459, 3.1713623644102262, 2.69942846420458, 3.5136277592106446, 2.9851166206927844, 1.8480327966399324, 9.53668262359224, 3.2636389785038276, 0.7609950644532011, 0.8923862406972007, -5.631071410324548, 0.6314396873318737, 8.231588263761763, 3.199325713378352, -3.0190372005720834, 3.217005371431169, 2.5092985373354795, -5.013922356706436, -5.068805990348685, -0.2368957791538721, 2.0125980249539994, 1.6933595877923349, -5.37242631909729, -5.3473774773627225, -6.5279265229605645, -3.0339918903056255, 2.176275007448857, -1.9616019354370549, 2.4332376616032363, -3.90249598596484, 0.5879752135533777, -9.662355385142979, -1.851464138513656, -6.808672186524568, 6.7634094302113095, -3.713026278688061, -5.484665964356532, 7.392037454610959, -1.8824611582595758, 7.915832273429638, 9.059217750544793, 3.3404350651766768, -5.353537609117599, 3.3297748372346385, -2.196180854129874, -1.4284315003837544, 6.801249518395096, 3.395149825803337, -4.265754245435177, -5.130724251335601, 14.402961053732287, 3.990401780726364, -5.047360777505768, -0.13931793825181593, -10.64499778532544, -10.685292640253417, 1.7619558205839938, -1.1662824868832642, -1.3096707048845244, -3.5801358561118546, -3.440799073031036, -4.045362405882496, -0.464338957603952, -1.5618430231725067, 1.3159898010129243, 0.026273938342101913, -9.86883202975127, 0.0109333573784441, -3.0446537784954746, -3.877126276959361, 2.6255995676816832, 5.883742585149384, -7.662357700394291, 2.4205728563124316, -0.7399765419530869, -4.087177305644023, -3.647228836542213, -9.13501789549083, -3.7832112597732053, -4.368606711298134, 4.142710269164448, -0.8438002508710092, -4.1718747269846785, 8.817261421830661, -3.0275157525189735, -5.2309105184723315, 2.7108564980594596, 0.30736788986476954, -9.063882050677302, 3.640063303865994, -6.833648138075647, -4.985347107582871, 1.0456411889229347, -9.565978029551864, 8.776406973688118, -2.0695105628615944, -4.759659813228801, -1.71117223454646, -3.9153287109589794, -8.370620163646825, 0.048907235959483056, -13.693890374803532, 1.9258919895750206, -1.189938670674094, -6.651221539036777, 3.222327740980587, -4.71856020958975, 4.618387437203118, 3.560263168562913, 5.079549775120615, 3.8424090120336754, 1.3422119914020028, 6.798212005614931, 1.799821742501666, 4.447632567352945, -1.2944325391077813, 1.8853424920642725, 0.006644442513728999, -2.718461270190425, -11.89995682311591, -0.7646185190193024, -0.6817511045287562, 4.93127974345767, 0.6850159683233754, 5.212160460298057, -0.06032226530055001, -7.141791104994265, 9.244343394313713, -7.367078499888522, -3.0305526477367155, -2.679998177579294, 1.7626907406911645, 4.122748503092252, 3.586617495740576, 7.855768523160437, 1.2890465393304376, -3.0068339201999024, -3.81284522309742, 4.132001674878986, -10.936465888780347, 3.3405835636268426, 0.8998099621299662, -8.691263567462, 0.6539968342565626, -6.165454752755341, -4.887325542191246, -0.7408116539965688, -6.165316802596954, 0.6006806229254882, 2.1463698410924508, 5.782932812181572, -2.5138513398917883, -2.5770739800884748, 5.062456559556025, 8.009187339989726, -2.5877822045139824, 3.6778548846560355, -0.05928800900664861, -0.5401003448434135, -0.7472471496900099, 1.226599775424523, 1.598749959982141, 4.170050529821179, 5.18785728907373, 3.662299609537709, -1.761855137428806, 2.030685067961702, 8.159710893082044, 2.0098112119188842, 0.013772604826062095, 2.9453008921657102, -2.214501326182657, -0.13160881876942285, 2.1973362742570384, -2.989028087359782, 3.384143335219247, -8.667229810008253, -7.46575415624865, -0.49902750165330106, 4.19274859839484, -5.394587136800578, -5.186972540770603, -6.665108002085822, 0.6898150526084816, -7.758801487488989, -6.308789717025325]

let beta = [0.9231870621291499, 0.9161679300594803, 0.897078378110892, 0.8814480076110371, 0.9034768136621311, 0.904312349833272, 0.9090370135597046, 0.9246993991463337, 0.8532555752238791, 0.8939550166899131, 0.8998136286526969, 0.8986786758928139, 0.9116557938193652, 0.8516552393276752, 0.8833607923904448, 0.9396890259146534, 0.9122525267650566, 0.8823621312956369, 0.9247069623466259, 0.9045566773486249, 0.9007126107079518, 0.8862004072410843, 0.8986233055512304, 0.8794280375421036, 0.8916433907893971, 0.9027937555232457, 0.9349637791909554, 0.8754810091197954, 0.9169162393459155, 0.934982913294102, 0.9259391259488866, 0.9429581638643421, 0.9071293839269237, 0.9104385870137908, 0.9014620554021402, 0.9247113458658952, 0.8925118547291735, 0.8688471757551626, 0.8920948472736829, 0.9203087436914247, 0.9268556865132391, 0.9204610669468566, 0.8879841670597477, 0.8518050674731855, 0.9254154164321599, 0.8605201189839605, 0.8722347347010129, 0.9033917457427872, 0.8980814412161605, 0.912754376636933, 0.9110505501000131, 0.9241072039591499, 0.9102224581089545, 0.9112746631924833, 0.9598819729132391, 0.8813850198061876, 0.9452789624548404, 0.8884853035016993, 0.8991022845703907, 0.8634592920244818, 0.9137438192297674, 0.8915763236162718, 0.929735089208148, 0.9104307291424555, 0.915760751679062, 0.8861763809819964, 0.8883010026981256, 0.911416977760335, 0.9173895765182402, 0.9297596016600591, 0.8949448497529047, 0.9290398042141684, 0.8990121380450176, 0.8929655158685786, 0.8743308749291708, 0.919927263193317, 0.9011809651041316, 0.9087612870480978, 0.9027883424826786, 0.9147476416876176, 0.889710646914874, 0.8703119679180882, 0.8463046409351718, 0.8780576889364534, 0.9310061489849142, 0.9086590695316228, 0.8702507031314968, 0.9344022638603889, 0.9048891527300515, 0.9145944802962124, 0.8977002840244939, 0.8864482216818544, 0.923261332961887, 0.8922077959693264, 0.8787709863261634, 0.8723239281495727, 0.9071300949833258, 0.9060867872694531, 0.8961248101640154, 0.9150708766396631, 0.8805592786888418, 0.9003686134901502, 0.9154378242082446, 0.8477159042678278, 0.8668636066655088, 0.8966799512633784, 0.9266694037400905, 0.900348534026052, 0.8936506879965487, 0.9086208756090957, 0.8778710279786798, 0.9316762115004436, 0.8908288618363842, 0.9186873059160215, 0.9328421960524889, 0.889815216207105, 0.9171285678983333, 0.912264989336077, 0.871180251913202, 0.8821717693511287, 0.8951816728441979, 0.8923390182865315, 0.9253641562833527, 0.907817362686027, 0.9485156727559351, 0.9040778795524759, 0.890851488219003, 0.8838234557992347, 0.8695742921344786, 0.8890811442555777, 0.9205239313357221, 0.9069961603711145, 0.9384472236312784, 0.882784268068369, 0.8900865945790702, 0.9140082746554671, 0.8703947487357141, 0.9150522559313023, 0.9048807380624537, 0.8869758579539118, 0.8831310670878292, 0.8940281455729143, 0.9444240308705184, 0.8970816644931005, 0.8884228145331811, 0.9000910080212289, 0.9329282928068624, 0.8864647895247157, 0.8754964017287674, 0.8969458902375522, 0.8970392609816318, 0.9284064490562522, 0.8878006765484057, 0.854693582418576, 0.9035243178279495, 0.8961526283630559, 0.9016299361563984, 0.9158019738507878, 0.8808433177813177, 0.8945565603695853, 0.8974769972697056, 0.8927245575859409, 0.9217127238795906, 0.9066583040413122, 0.9138961745860649, 0.9150846832354458, 0.9086694866623523, 0.8959104623606978, 0.8809788899609343, 0.8956705096760851, 0.8644656791767463, 0.8971940131172539, 0.9254563450169149, 0.9034659642254151, 0.9124706047795985, 0.9210978864740048, 0.9045018408555938, 0.8959744149029529, 0.9376124067169007, 0.901614823026106, 0.9020653807529901, 0.9185468059602856, 0.9061826220998348, 0.8814284884631121, 0.9122400621215017, 0.8818746818315525, 0.9206893971131268, 0.9067894037340648, 0.8454621888188798, 0.9315661371446363, 0.8790040130861418, 0.8889903067053343, 0.9071637770482668, 0.8983585647398415, 0.9135675244061839, 0.8980836656754297, 0.8614746386055434, 0.9073834571857337, 0.8825584452426578, 0.9190751040292211, 0.8905030794078885, 0.890668718265969, 0.8766787583366975, 0.8768789962206706, 0.9156706674420748, 0.9069110060958375, 0.8957500747686785, 0.8936138644627174, 0.9289272694952622, 0.860429124761883, 0.8592455144713496, 0.9239561952980485, 0.9458841802702572, 0.8783108076006066, 0.8737556090735741, 0.9254369015388374, 0.8655603213487336, 0.9010068063249291, 0.9086562088990052, 0.937804826329613, 0.9008127547028212, 0.8811546457990025, 0.9020897422238814, 0.9290609469590735, 0.9055719926005582, 0.9423221603964923, 0.9392859683692257, 0.8817787345552914, 0.8828178586124783, 0.8710679662219786, 0.8919830479705282, 0.9140471158012787, 0.9149423272214126, 0.879888704028068, 0.8878477280322096, 0.9354639996559121, 0.8949538958915885, 0.9369303092047198, 0.9109727457665884, 0.8950968386086845, 0.9124579815022037, 0.8704788729131959, 0.9056472577905721, 0.9248969716310074, 0.929536264852998, 0.8878213456709494, 0.9083594781452995, 0.8927618518337788, 0.9004782598734902, 0.8742063518113239, 0.9109490074890804, 0.9277025024571461, 0.8978652749471259, 0.8920297764231225, 0.897748458772073, 0.9215164051271219, 0.8869997196107416, 0.8903739251180123, 0.9448661236582674, 0.8821352457890668, 0.892989141773101, 0.8940012247877023, 0.9324241216694102, 0.9105666722603131, 0.9062800697595295, 0.888888330093742, 0.9048332604198648, 0.8822217718747302, 0.9055391407015375, 0.9100211173450417, 0.8546779905737825, 0.9056894241945337, 0.9096318062479998, 0.8866379265340976, 0.9321044683465015, 0.9026373516636077, 0.9043042990504113, 0.8378309016828984, 0.9231417586556867, 0.8672145273507407, 0.8665019663922215, 0.9030374057786552, 0.9123925157103542, 0.9149769052953876, 0.8841942148436154, 0.9100810720014672, 0.8934407273202973, 0.8792490737726298, 0.9012911432575789, 0.8620025166730815, 0.8908302832797119, 0.9402003795051573, 0.8863162572940294, 0.8638807451541971, 0.8931847906441136, 0.9154865368926646, 0.9051144886047736, 0.9133604624825145, 0.8975688971317535, 0.9080702748203309]

let noise = [2.4023314009784427, -1.1558151209814405, -1.9796835789329201, 0.32086254425376864, 0.907983221451108, 0.1930740982895011, 1.171876336632494, 1.678735092235576, -0.24414983119369457, -0.5747117456515409, 0.8294623500400766, -0.35828972721308966, 0.450996268132854, 0.8434804355671335, 0.6454605206468126, -1.5521951459500656, 0.9392655702757865, -1.1633341842008829, -0.19873759045639222, -1.048977001883559, -0.2793840523842468, 0.7140119939021016, 0.22993086478733402, 1.1949811182288659, -1.6126157784779802, -0.5249721196261629, 0.9986849201805745, -0.5007907631784501, -0.6712177148045824, -0.9653116055265645, 1.704794109559841, -1.8618196251022663, -1.2458618935139933, 0.7539970521972412, -0.21103686094120885, 0.8627646205042419, -0.46844942315665294, -0.9356174704516775, 0.4557363838955594, -1.0947481884556691, 0.5620368438850999, -0.611063210732572, 1.3475446512875566, 0.26094739247463805, 0.33964307327227833, -0.8767944641931167, -0.31246865256933887, -1.79441155835521, -0.9875673243031904, -1.7113975460850799, 0.677373110313088, 0.10927192970526932, 1.5295275216810698, 2.507886633315486, 1.329404349285365, -0.7451851952045805, 1.313134266755624, 0.9177347769700597, -0.35360816998199496, 0.5049047093658382, 1.0899540706649349, -0.9726354598791852, -0.7101938102558779, -0.21834238949188403, 1.5860595672941764, -0.6944713129118328, -0.6272785993589659, -0.12952229321247116, -0.08241141430032128, -0.500722950199254, -1.145157705909325, -0.3132709852593412, 1.8593477374622642, -0.5597545388677796, 0.9941913144003579, 0.5337186338013046, -0.28420977565263034, -0.5730669378840264, 0.05796095581448153, 1.0212090444710065, -0.6120779022171507, 2.1135200418692417, -1.3423245534699337, -0.8154563127317037, 0.606227241403508, 0.6027061388992784, -0.35556601837107976, -1.1066409490259517, 0.3754752671017663, -0.5599570424171495, 1.014206946629616, -0.00014636310225095263, -0.07606266427188085, 0.17919843971813332, -1.399834144497797, -0.8134717671474441, -0.7345528041649143, 0.021077612015809287, 0.5190948180276445, -0.21689518162165322, -0.6668987928156892, -0.6947580463174385, 0.3549441473505459, -1.7304844187666493, -0.14336641258070282, -0.7884568458845681, 0.8634013004126287, 0.31963593540548485, 0.8954961873433009, -1.0384026915833493, -0.5383110588272492, -0.7993059813636898, 0.34444877324578127, 0.47143477895711866, -1.3486208203838626, 0.26011651799163227, -0.9691539999147677, -0.5668870244200566, -1.0278833320589014, -1.5425622725509922, 0.23641201696617137, 1.6181542793834132, -1.322931772934495, 1.9215941859962828, 0.5190555272154, -0.8292507169189817, -0.4916924543974258, -0.36784909987157083, 0.1942167179750237, -1.249740232064931, -1.142171568532239, 1.1671425610575668, -1.3479251478293999, 1.0610766599164128, 0.8226110446002187, 0.6717335891700286, -0.43042766095182045, 2.0431825658284914, 0.2851300990632548, 0.6029183974428999, 1.0718156321763899, -0.26609378385524585, 0.3432604586289152, -0.18873343686306077, -0.49280965668228527, 0.06062686384988469, -1.072704746915492, 2.3771202770532365, 1.2818948003733865, 0.6376436192092447, -0.5003071532915132, 0.2987758581994994, -0.11012195054718224, 1.3202128450531325, 2.6888039943041426, 0.3980084406017977, -1.2126070774517714, -0.8779039464020357, 0.14731189295887046, -0.4973087905233301, 1.2880160690418365, 0.6644217349227174, 0.7089884786734012, 0.039131048756928244, -1.6083086993017452, 0.27299405928656634, 0.6380064494392579, 1.2254934089787584, 0.19089291621346388, -1.00208750244111, 0.642086749531869, 0.39307408815620065, -0.27259389417778884, -0.7672936474254481, 0.6544032211492065, 0.4160571966339856, 1.040880352960688, -0.39654289988183095, -0.851753442068853, -0.8039098631859658, -1.6205798785094994, 1.2027894755730533, 1.3376082410518386, 0.1560216466882491, -1.6248878775434101, 0.16501511411431985, 0.7833271058467526, 1.29822806230578, 0.34028054851863515, -0.9766820652088866, -0.821407381661042, -0.951406835038806, -0.9269854705834816, 0.2464872294967376, -0.6803495201211376, -0.2214117196116708, -0.47242601456772854, 0.3979113671070753, 0.9709256792480113, 0.48109838068500643, 0.24645892754568766, -0.43042567330699877, 0.5215102588743068, -0.33976561237967023, -1.005729578946726, -0.18017462891185992, 1.2176206311203386, 0.414127889531138, -0.7001228614371574, 0.49553951731063095, -0.45381001687220585, -0.4372698785295756, -0.9014387566059675, -0.18207066362876656, 0.33996365986701205, 0.3092027554088983, 1.2221568815481545, -0.1417898211480757, 0.2648667272673215, 1.3337949940993183, 0.24279387645903483, -1.538860080357598, 0.9401799212340215, 0.7378901018126133, 0.00909200816999117, -0.543063383817869, -0.8518943749905308, 0.5281902117608952, 0.6047068565076592, -1.1819735577426238, 0.6732088042106144, -0.40695721648197763, 0.605027298332205, -0.6775550612882879, 0.7543481585028262, -0.31299868171174866, 0.7877450675442149, -0.2934945428364668, -0.16825527078814934, 0.40471422367296206, -0.6801710160282667, -0.46872072359233574, -0.10332547908204776, -1.2276556590026464, 1.0672982015831938, -1.3250100391217583, 0.8055667344453772, 0.17034838746074146, 0.4751813987130188, -0.0945656551745982, -0.9970665662773324, -0.989959508745779, 0.7221794998155926, -0.8178831430906689, 1.0054770652292602, -0.14367602282685413, 0.528005901481591, -0.2601127385443129, 0.47513696646894477, 0.7935894708557567, 0.9322718283982174, 0.7456950645328896, -1.6201222475046186, 0.11466972171897634, 0.3815362203965754, 1.9467348078374556, -0.3977875853464572, -0.48973773595251446, -0.72266106206043, -0.7716378766401799, 0.6245688572548653, 0.4539955296435502, 0.5361732582142034, 0.037740469084641355, 0.5643933787956291, 0.6708744716250165, -0.0657669577199184, 0.8813084543354303, -0.3714502650751562, -1.172055503182355, -0.35259306331891466, -0.511708558511733, -0.17713339585468565, 1.2766191588759785, -0.1231181661450021, 0.9625751574786585, -0.27434390117656976, 1.5744707456765665, 1.104070980997767, -1.008508529544717, -0.27117789510287615, 0.7724036056424348, -0.29846829254352764, -2.2284547989850183, -1.4623509087322717, 0.22502638475021072, 0.09491920227757578, -0.2545741728699202, 0.08960085612623271, -1.3692124286689518]



//  Canvas Attributes Set
let canvas = document.querySelector("canvas");
canvas.setAttribute("width", 1270);
canvas.setAttribute("height", 750);
let ctx = canvas.getContext("2d");   // Get Draw Context
ctx.font = "30px Arial"; // Set Font For UI


// offset from top of screen
let y_off = 100;


// Difficulty Sliders
let difficulty = document.querySelector("#slider");
difficulty.style.display = "none";


//  Make background
let background = new Image();
background.src = '../../assets/wildgrass_1024.png';
background.addEventListener(
    "load",
    function() {
    	ctx.drawImage(background, 0, 0, canvas.width, canvas.height); // (image, pos-x, pos-y, width, height)
    }
);


//  X, Y Partitions
let col = 1250/6;    // Width of one partition
let row = 750/3;   // Height of one partition


//  Create a Video element to play during foraging
let vid = document.createElement("video");
vid.src = "../../assets/harvest.mp4";
vid.loop = true;
vid.currentTime = 2;


//  Draw Bushes
let bush = new Image();
bush.src = '../../assets/bush.png';


// Set Bush Attributes
let s = normal[Math.floor(Math.random()*290)];
let bushes = [
    {id: 1, x: 729, y: 700 - y_off, r: Math.floor(70 + s), rate: 2, empty: false},
    {id: 2, x: 521, y: 700 - y_off, r: 0, rate: 2, empty: true},
    {id: 3, x: 375, y: 554 - y_off, r: 0, rate: 2, empty: true},
    {id: 4, x: 375, y: 346 - y_off, r: Math.floor(70 + s), rate: 4, empty: false},
    {id: 5, x: 521, y: 200 - y_off, r: Math.floor(70 + s), rate: 8, empty: false},
    {id: 6, x: 729, y: 200 - y_off, r: 0, rate: 2, empty: true},
    {id: 7, x: 875, y: 346 - y_off, r: Math.floor(70 + s), rate: 16, empty: false},
    {id: 8, x: 875, y: 554 - y_off, r: 0, rate: 2, empty: true},
];


// Draw Bush on load
bush.addEventListener(
    "load",
    function() {
        bushes.forEach(
            rect => {
                ctx.drawImage(bush, rect.x, rect.y, 100, 100); // (image, pos-x, pos-y, width, height)
            }    
        );
    }
);


//  Consatants Defined
let minutes;    // minutes passed
let seconds;    // seconds passed
let dest = -1;   // Destination Bush
let pos = {x: 0, y: 0};   // bush position
let action = "searching";     // Action
let c = 0;   // Counter For Timeskip
let tc = 0;  // Counter For Time
let score = 0;  // total score
let data = [];   // Data Collected in array form
let end = {m: 2, s: 0};  //  End time of Single Playthrough
let interval;


// Create a Audio Element for Background Noise
var audio = document.createElement("AUDIO");
document.body.appendChild(audio);
audio.src = "../../assets/forest.wav";
audio.loop = true;


// Get mouse posotion
document.body.addEventListener("mousemove",
    function (e) {
        pos = {x: e.clientX - canvas.getBoundingClientRect().left, y: e.clientY - canvas.getBoundingClientRect().top};
        audio.play();
    }
);


//  Set Event for Foraging
document.addEventListener("keypress", (e) => {
        e.preventDefault();        
        if(e.code === 'Space' && canvas.style.display !== 'none' && difficulty.style.display === "none") {
            bushes.forEach(
                (b, i) => {
                    if(isInside(100, 100, b.x, b.y, pos.x, pos.y) && action === "searching") {
                        action = "forage";
                        dest = i;
                        vid.play();
                    }
                }
            );
        }
    }
);


//  Set Event for Fixing a Destination Bush
document.addEventListener("click",
    function (e) {
        bushes.forEach(
            (b, i) => {
                if(isInside(100, 100, b.x, b.y, e.clientX - canvas.getBoundingClientRect().left, e.clientY - canvas.getBoundingClientRect().top) && action === "searching") {
                    action = "forage";
                    dest = i;
                    vid.play();
                }
            }
        );
    }
);

// chaning display diffculty value
difficulty.children[1].addEventListener("load", () => {
    difficulty.children[2].textContent = difficulty.children[1].value;
});
difficulty.children[1].addEventListener("change", (e) => {
    console.log(e);
    difficulty.children[2].textContent = e.target.value;
});


//  Submission Button
difficulty.children[3].addEventListener("click",
	() => {
        // remove elements
        difficulty.style.display = "none";

        // collect data
        let my_data = JSON.parse(window.localStorage.getItem("my_data"));
        my_data.bush_data.push(bushes);
        my_data.collection_data.push(data);
        my_data.difficulties.push(difficulty.children[1].value);
        window.localStorage.setItem("my_data", JSON.stringify(my_data));
        
        // display next screen
		document.querySelector("#nxt").style.display = "block";
    }
);


//  Check if Mouse click is inside bush
function isInside(rw, rh, rx, ry, x, y) {
    return x <= rx+rw && x >= rx && y <= ry+rh && y >= ry;   // Get Click Inside a Bush
}


//  Check if Player Reached the target Bush
function reached(p, d, skip) {
    if(!d)
        return;

    if(skip.x >= 0 && skip.y >= 0)
        return p.x >= d.x && p.y >= d.y;
    else if(skip.x >= 0 && skip.y <= 0)
        return p.x >= d.x && p.y <= d.y;
    else if(skip.x <= 0 && skip.y >= 0)
        return p.x <= d.x && p.y >= d.y;
    else if(skip.x <= 0 && skip.y <= 0)
        return p.x <= d.x && p.y <= d.y;
}


//  Update Rewards and Exploits
function update(patch) {
    if(bushes[patch].empty) {
        return;
    }
    bushes.forEach(
        (b, i) => {
            if(i === patch) {
                let f = beta[Math.floor(Math.random()*290)];
                b.r = b.r <= 0 ? 0 : Math.floor(b.r*f) <= 0 ? 0 : Math.floor(b.r*f);   // e gets up by 1 for each calculation
            }
            else if(b.empty) {
                return;
            }
            else {
                let n = noise[Math.floor(Math.random()*290)];
                b.r = b.r <= 0 ? 5 : b.r >= 200 || Math.round(b.r + b.rate + n) >= 200 ? 200 : Math.round(b.r + b.rate + n);
            }

            bushes[i].r = b.r;
        }
    );
}


//  Update Loop
function draw() {
    // Clear Screen
    ctx.clearRect(0, 0, canvas.width, canvas.height);

	// Loading
    let loading = bush.complete && background.complete;  // Pause If Resources Not Loaded
    if(!loading) {
        ctx.fillStyle = 'white';
        ctx.fillText("Loading", col, row/4);
        return;
    }

    // Draw background    
    ctx.drawImage(background, 0, 0, canvas.width, canvas.height);

    // calc/display time
    seconds = Math.floor(tc/100);
    minutes = Math.floor(seconds/60);
    seconds = seconds%60;
    ctx.fillStyle = 'white';
    //ctx.fillText(`Time: ${minutes}:${seconds}`, col/4, 200);
    //ctx.fillText("Score: " + score, col/4, 250);
    //tickey-3 update score
    document.getElementById('ovltime').innerText= `Time: ${minutes}:${seconds}`
    document.getElementById('ovlscore').innerText= "Score: " + score
    //tickey-3 end
    

    // game end
    if(minutes === end.m && seconds === end.s) {
        clearInterval(interval);
        canvas.style.display = "none";
        difficulty.style.display = "block";
        document.querySelectorAll("#slider > p")[0].style.display = "block";
        //tickey-3 remove overlays and set backkground clor white
        document.getElementById('overlay').style.display="none"
        document.getElementById('overlay').style.display="none"
        document.getElementById('overlay2').style.display="none"
        document.body.style.backgroundColor = "white";
        //ticket -3 end
        return;
    }
    
    // game state
    switch(action) {
        case "searching":
            bushes.forEach(
                rect => {
                    if(isInside(100, 100, rect.x, rect.y, pos.x, pos.y))
                        ctx.drawImage(bush, rect.x, rect.y, 100, 100); // (image, pos-x, pos-y, width, height)
                }
            );
            break;

        case 'forage':
            if(c === 50) {
                update(dest);
                score += bushes[dest].r;
                data.push({id: bushes[dest].id, reward: bushes[dest].r, time: `${minutes}:${seconds}.${(tc%100)*10}`, block: 5});
                vid.pause();
            }

            if(c > 50) {
                ctx.fillStyle = 'white';
                ctx.fillText("+" + bushes[dest].r, bushes[dest].x, bushes[dest].y);
            }
            else
                ctx.drawImage(vid, bushes[dest].x, bushes[dest].y, 100, 100);

            if(c === 100) {
                action = 'searching';
                c = 0;
            }
            c++;
            break;

        default:
            bushes.forEach(
                rect => {
                    ctx.drawImage(bush, rect.x, rect.y, 50, 50); // (image, pos-x, pos-y, width, height)
                }
            );
    }
    
    tc++;
}
interval = setInterval(draw, 10);